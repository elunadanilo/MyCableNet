@page "/asignar-servicios"
@inject IApiClient Api
@inject NavigationManager NavigationManager

<h3>Asignar Servicios a Cliente</h3>

<div class="form-group">
    <label>Cliente:</label>
    <select class="form-control" @bind="nuevo.ClienteId">
        <option value="0">-- Seleccione Cliente --</option>
        @foreach (var c in clientes)
        {
            <option value="@c.Id">@c.Nombre (@c.Codigo)</option>
        }
    </select>
</div>

<div class="form-group">
    <label>Servicio:</label>
    <select class="form-control" @bind="seleccion.ServicioId">
        <option value="0">-- Seleccione Servicio --</option>
        @foreach (var s in servicios)
        {
            <option value="@s.Id">@s.Nombre (@s.Tipo)</option>
        }
    </select>
</div>

<button class="btn btn-primary mb-3" @onclick="AgregarDetalle" disabled="@(seleccion.ServicioId==0)">Agregar al Contrato</button>

@if (detalles.Any())
{
    <table class="table table-striped">
        <thead>
            <tr><th>Servicio</th><th>Precio Mensual</th><th></th></tr>
        </thead>
        <tbody>
            @foreach (var d in detalles)
            {
                <tr>
                    <td>@servicios.First(s => s.Id == d.ServicioId).Nombre</td>
                    <td>@d.PrecioMensual.ToString("C")</td>
                    <td><button class="btn btn-sm btn-danger" @onclick="() => QuitarDetalle(d)">×</button></td>
                </tr>
            }
        </tbody>
    </table>

    <button class="btn btn-success" @onclick="GuardarContrato">Guardar Contrato</button>
}

@code {
    private List<ClienteDto> clientes = new();
    private List<ServicioDto> servicios = new();
    private ContratoServicioCreateDto nuevo = new ContratoServicioCreateDto();
    private ContratoDetalleDto seleccion = new ContratoDetalleDto();
    private List<ContratoDetalleDto> detalles = new();

    protected override async Task OnInitializedAsync()
    {
        clientes = await Api.GetAsync<List<ClienteDto>>("api/Clientes");
        servicios = await Api.GetAsync<List<ServicioDto>>("api/Servicios");
    }

    void AgregarDetalle()
    {
        var servicio = servicios.First(s => s.Id == seleccion.ServicioId);
        detalles.Add(new ContratoDetalleDto
            {
                ServicioId = servicio.Id,
                PrecioMensual = servicio.PrecioMensual
            });
        seleccion = new ContratoDetalleDto();
    }

    void QuitarDetalle(ContratoDetalleDto det) => detalles.Remove(det);

    async Task GuardarContrato()
    {
        if (nuevo.ClienteId == 0 || !detalles.Any()) return;
        nuevo.Detalles = detalles;
        nuevo.FechaInicio = DateTime.UtcNow;
        await Api.PostAsync("api/ContratosServicios", nuevo);
        NavigationManager.NavigateTo("/");
    }
}
